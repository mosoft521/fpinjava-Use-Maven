package com.fpinjava.recursion.exercise04_02;

import org.junit.Test;

import java.math.BigInteger;

import static org.junit.Assert.assertEquals;

public class FibonacciTest {

    @Test
    public void testFib() {
        assertEquals(BigInteger.valueOf(0), Fibonacci.fib(0));
        assertEquals(BigInteger.valueOf(1), Fibonacci.fib(1));
        assertEquals(BigInteger.valueOf(1), Fibonacci.fib(2));
        assertEquals(BigInteger.valueOf(5), Fibonacci.fib(5));
        assertEquals(BigInteger.valueOf(55), Fibonacci.fib(10));
        assertEquals(new BigInteger("354224848179261915075"), Fibonacci.fib(100));
        assertEquals(new BigInteger("3364476487643178326662161200510754331030214846068006390656476997468008144216666236815559551363"
                + "37340255820653326808361593737347904838652682630408924630564318873545443695598274916066020998841839338646527313000888"
                + "30269235673613135117579297437854413752130520504347701602264758318906527890855154366159582987279682987510631200575428"
                + "78345321551510387081829896979161312785626503319548714021428753269818796204693609787990035096230229102636813149319527"
                + "56302278376284415403605844025721143349611800230912082870460889239623288354615057765832712525460935911282039252853934"
                + "34620904245248929403901706233888991085841065183173360437470737908552631764325733993712871937587746897479926305837065"
                + "74283016163740896917842637862421283525811282051637029808933209990570792006436742620238978311147005407499845925036063"
                + "35609338838319233867830561364353518921332797329081337326426526339897639227234078829281779535805709936910491754708089"
                + "31841056146322338217465637321248226383092103297701648054726243842374862411453093812206564914032751086643394517512161"
                + "52654536133311131404243685480510676584349352383695965342807176877532834823434555736671973139274627362910821067928078"
                + "47180353291311767789246590899386354593278945237776744061922403376386740040213303432974969020283281459334188268176838"
                + "93072003634795623117103101291953169794607632737589253530772552375943788434504067715555779056450443016640119462580972"
                + "21672975861502696844314695203461493229110597067624326851599283470989128470674086200858713501626031207190317208609408"
                + "12983215810772820763531866246112782455372085323653057759564300725177443150515396009051686032203491632226408852488524"
                + "33158051534849622434848299380905070483482449327453732624567755879089187190803662058009594743150052402532709746995318"
                + "77072437682590741993963226598414749819360928522394503970716544315642132815768890805878318340491743455627052022356484"
                + "64951961124602683139709750693826487066132645076650746115126775227486215986425307112984411826226610571635150692600298"
                + "61704945425047491378115154139941550671256271197133252763631939606902895650288268608362241082050562430701794976171121"
                + "233066073310059947366875"), Fibonacci.fib(10000));
    }

}
